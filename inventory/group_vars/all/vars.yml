# REM: if you are looking for passwords or other variables
# that vary from dev to stage to prod, check the other subfolders

# setup vars
project:        "oriole-ansible"
version:        "0.1.0"
app_name:       "oriole"
app_user:       "{{ app_name }}"
app_group:      "{{ app_user }}"

# ssh vars
use_master_user:          true
# deprivilege_deploy_user:  true
remote_user:              "{{ lookup('ini', 'remote_user section=cross-project file=~/.ansible.ini') }}"
login_user:               "{{ lookup('ini', 'login_user section=cross-project file=~/.ansible.ini') }}"
login_group:              "{{ lookup('ini', 'login_group section=cross-project file=~/.ansible.ini default=' + login_user ) }}"
login_user_key:           "jhu_ssh_key"
create_login_user_key:    true
create_login_user:        false
login_user_grant_sudo:    false
ssh_aliases:
- "{{ app_name }}-{{ environ }}"
# ssh_settings:
# - regexp: "^PermitRootLogin"
#   setting: "PermitRootLogin no"
# - regexp: "^DenyUsers deploy"
#   setting: "DenyUsers deploy"

mode:             "deploy" # dev || deploy

# Edition can be one of: 'ce' (Community Edition) or 'ee' (Enterprise Edition).
docker_edition: 'ce'
#docker_package: "docker-{{ docker_edition }}"
docker_package_state: present
docker_install_compose: true

# No DNS entry for hostname for -dev server. resolve to docker-host
# See https://stackoverflow.com/questions/24319662/from-inside-of-a-docker-container-how-do-i-connect-to-the-localhost-of-the-mach/52858101#52858101

docker_etc_hosts: {}

# TODO testing-backend only has one user so just use it.
folio_user:  folio
folio_group: "{{ folio_user }}"
okapi_user:    okapi
okapi_group:   "{{ okapi_user }}"

postgres_version_major:     9
postgres_version_minor:     6
postgres_extra_packages:
  - "postgresql-contrib"
postgres_extensions:
  - pgcrypto
#
git_enablerepo: "ius"
git_install_from_source: false
git_packages:
  - git2u

jhu_dns_servers:
  - 10.200.1.1
  - 10.200.2.2

firewalld_services:
  - zone: public
    service: http
    permanent: true
    state: enabled
  - zone: public
    service: https
    permanent: true
    state: enabled
  - zone: public
    service: ssh
    permanent: true
    state: enabled
  - zone: public
    service: postgresql
    permanent: true
    state: enabled
