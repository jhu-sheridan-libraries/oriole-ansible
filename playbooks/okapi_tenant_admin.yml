---
# Create tenant admin users
- hosts: oriole

  tasks:
    - name: get active tenents
      set_fact:
        active_tenants: "{{ folio_tenants | selectattr('active') | list}}"

    - name: get authtoken modules
      set_fact:
        authtoken_module: "{{ okapi_modules | selectattr('name', 'search', 'authtoken') | list }}"

    - name: Disable tenant authtoken module, also disables auth mods
      uri:
        url: "{{ external_okapi_url }}/_/proxy/tenants/{{ item.0.id }}/install"
        method: POST
        body:
          - id: "{{ item.1.name }}-{{ item.1.version }}"
            action: "disable"
        body_format: json
      register: authtoken_disable
      loop: "{{ active_tenants | product( authtoken_module ) | list  }}"
 
    - name: Check tenant admin user
      uri:
        url: "{{ external_okapi_url }}/users?query=username%3d%3d{{ item.admin_user.username }}"
        headers:
          Accept: "application/json, text/plain"
          X-Okapi-Tenant: "{{ item.id }}"
        body_format: json
        status_code: [200]
      register: check_tenant_admin
      loop: "{{ active_tenants|flatten(levels=1) }}"

    - name: Create tenant admin user
      uri:
        url: "{{ external_okapi_url }}/users"
        method: 'POST'
        headers:
          Accept: "application/json, text/plain"
          X-Okapi-Tenant: "{{ item.item.id }}"
        body:
          id: "{{ item.item.admin_user.id }}"
          username: "{{ item.item.admin_user.username }}"
          personal: "{{ item.item.admin_user.personal }}"
          active: "{{ item.item.admin_user.active }}"
        body_format: json
        status_code: 201
        register: check_tenant_admin_created
      loop: "{{ check_tenant_admin.results|selectattr('json.totalRecords', 'equalto' , 0) | list }}"

    - name: Check tenant admin login
      uri:
        url: "{{ external_okapi_url }}/authn/credentials?query=userId%3d%3d{{ item.admin_user.id }}"
        headers:
          Accept: "application/json, text/plain"
          X-Okapi-Tenant: "{{ item.id }}"
        status_code: [200,400, 404]
      register: check_tenant_login
      loop: "{{ active_tenants|flatten(levels=1) }}"

    - name: Create tenant admin login
      uri:
        url: "{{ external_okapi_url }}/authn/credentials"
        method: 'POST'
        headers:
          Accept: "application/json, text/plain"
          X-Okapi-Tenant: "{{ item.item.id }}"
        body:
          userId: "{{ item.item.admin_user.id }}"
          password: "{{ item.item.admin_user.password }}"
        body_format: json
        status_code: 201
        register: check_tenant_login_created
      loop: "{{ check_tenant_login.results|selectattr('json.totalRecords', 'equalto' , 0) | list }}"

    - name: Check tenant perms
      uri:
        url: "{{ external_okapi_url }}/perms/users?query=userId%3d%3d{{ item.admin_user.id }}"
        headers:
          Accept: "application/json, text/plain"
          X-Okapi-Tenant: "{{ item.id }}"
        body_format: json
        status_code: [200, 404]
      register: check_tenant_admin_perms
      loop: "{{ active_tenants|flatten(levels=1) }}"

    - name: Create tenant perms
      uri:
        url: "{{ external_okapi_url }}/perms/users"
        method: 'POST'
        headers:
          Accept: "application/json, text/plain"
          X-Okapi-Tenant: "{{ item.item.id }}"
        body:
          userId: "{{ item.item.admin_user.id }}"
          permissions: "{{ item.item.admin_user.permissions }}"
        body_format: json
        status_code: 201
      loop: "{{ check_tenant_admin_perms.results|selectattr('json.totalRecords', 'equalto' , 0) | list }}"

    - name: Enable tenant authtoken module
      uri:
        url: "{{ external_okapi_url }}/_/proxy/tenants/{{ item.0.id }}/install"
        method: POST
        body: 
          - id: "{{ item.1.name }}-{{ item.1.version }}"
            action: "enable"
        body_format: json
      register: authtoken_enable
      loop: "{{ active_tenants | product( authtoken_module ) | list  }}"

    - name: Enable tenant auth modules
      uri:
        url: "{{ item.0.url }}"
        method: POST
        body:
          - id: "{{ item.1.id }}"
            action: "enable"
        body_format: json
      register: auth_mods_enable
      loop: "{{ authtoken_disable.results | subelements('json') | list  }}"

